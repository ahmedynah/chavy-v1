import {
  CustomerOpinion,
  ProductCard,
  Ratings,
  Slider,
} from "../../components";
// import { Carousel } from "react-carousel-minimal";
import { Carousel } from "react-responsive-carousel";
import { data } from "../../utils/constants/shared";
import { useContext, useEffect, useRef, useState } from "react";
import "react-responsive-carousel/lib/styles/carousel.min.css";
import AppDataContext from "../../utils/contexts/AppDataContext";
import ProductsContext from "../../utils/contexts/ProductsContext";
import { Link, useNavigate, useParams } from "react-router-dom";
import { reactLocalStorage } from "reactjs-localstorage";
import { Button } from "@material-tailwind/react";
import BasketContext from "../../utils/contexts/BasketContext";
import { WooCommerce } from "../../config/woocommerce-rest-api/woocommerce.config";

const ProductHead = (props) => {
  return (
    <div className="mt-2 w-full">
      <h1 className="xs:text-lg lg:text-4xl font-bold">
        {props.name !== undefined ? props.name : ""}
      </h1>
      <h2 className="mt-7 mb-5 xs:text-normal lg:text-3xl font-bold text-red-500">
        {props.price} {props.currency || "ر.س "}
      </h2>
    </div>
  );
};

const ProductDes = (props) => {
  return (
    <div className="w-full">
      <h3 className="mb-3 text-gray-400 font-semibold text-xl">معلومات عامة</h3>
      <div
        className="text-justify h-4/5 flex-shrink text-ellipsis xs:text-base xl:text-lg mb-5"
        dangerouslySetInnerHTML={{ __html: props.des }}
      ></div>
      <hr />
    </div>
  );
};

const PurchaseControls = ({ product }) => {
  const navigate = useNavigate()
  const { basket, setBasket, basketUpdateFlag, setBasketUpdateFlag } =
    useContext(BasketContext);
  // let basket = reactLocalStorage.getObject("basket");
  // useEffect(() => {
  //   if (basket !== undefined) {
  //     // console.log(basket);
  //   }
  // }, [basket, basketUpdateFlag]);
  return (
    <div className="my-8 gap-3 h-28 flex flex-col md:flex-row justify-between items-center">
      <Button
        className="px-2 rounded-none w-full md:max-h-[90px] hover:scale-[1.01] hover:cursor-pointer bg-[#FF4E00] h-full flex gap-2 justify-center items-center"
        onClick={() => {
          if (!(basket instanceof Array)) setBasket([product]);
          else {
            setBasket([...basket, product]);
          }
          setBasketUpdateFlag(true);
          console.log(typeof basket, basket);
        }}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="33.346"
          height="33.333"
          viewBox="0 0 33.346 33.333"
        >
          <path
            id="Path_48"
            data-name="Path 48"
            d="M25.917,21.667a3.318,3.318,0,0,0,2.917-1.717L34.8,9.133a1.66,1.66,0,0,0-1.45-2.467H8.683L7.117,3.333H1.667V6.667H5l6,12.65L8.75,23.383a3.339,3.339,0,0,0,2.917,4.95h20V25h-20L13.5,21.667ZM10.267,10h20.25l-4.6,8.333h-11.7Zm1.4,20A3.333,3.333,0,1,0,15,33.333,3.329,3.329,0,0,0,11.667,30Zm16.667,0a3.333,3.333,0,1,0,3.333,3.333A3.329,3.329,0,0,0,28.333,30Z"
            transform="translate(-1.667 -3.333)"
            fill="#fff"
          />
        </svg>

        <span className="text-white font-semibold text-[14px] md:text-[22px] lg:text[25px]">
          أضف للسلة
        </span>
      </Button>
      <Button
      onClick={() => {
        if (!(basket instanceof Array)) setBasket([product]);
        else {
          setBasket([...basket, product]);
        }
        setBasketUpdateFlag(true);
        console.log(typeof basket, basket);
        navigate("/basket/info")
      }}
       className="px-2 rounded-none w-full hover:scale-[1.01] md:max-h-[90px] hover:cursor-pointer bg-gray-900 h-full flex gap-2 justify-center items-center">
        
          {/* <TbCash  /> */}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="43.563"
            height="38.395"
            viewBox="0 0 43.563 38.395"
          >
            <g
              id="Path_186"
              data-name="Path 186"
              transform="translate(0.5 -235.639)"
              fill="#fff"
            >
              <path
                d="M 9.942034721374512 273.7839660644531 L 9.692034721374512 273.7839660644531 L 1.060094237327576 273.7839660644531 L 0.02936429530382156 273.7839660644531 L -0.2201257050037384 273.7839660644531 L -0.2206356972455978 273.5344848632812 L -0.2499957084655762 259.2513427734375 L -0.2499957084655762 258.1907348632812 L -0.2499957084655762 257.9407348632812 L 4.295654434827156e-06 257.9407348632812 L 4.319694519042969 257.9407348632812 L 4.319694519042969 238.7851104736328 L 4.319694519042969 236.1390075683594 L 4.319694519042969 235.8890075683594 L 4.569694519042969 235.8890075683594 L 7.21567440032959 235.8890075683594 L 32.59841537475586 235.8890075683594 L 35.24581527709961 235.8890075683594 L 35.49581527709961 235.8890075683594 L 35.49581527709961 236.1390075683594 L 35.49581527709961 238.7851104736328 L 35.49581527709961 243.2530059814453 L 35.49581527709961 243.5030059814453 L 35.24581527709961 243.5030059814453 L 33.12563323974609 243.5030059814453 L 32.87563323974609 243.5030059814453 L 32.87563323974609 243.2530059814453 L 32.87563323974609 238.5092010498047 C 32.32666015625 238.5092315673828 30.5816650390625 238.5093078613281 25.06115341186523 238.5093078613281 L 25.06115341186523 246.1528472900391 L 25.06115341186523 247.9322204589844 L 25.06115341186523 248.1822204589844 L 24.81115341186523 248.1822204589844 L 22.69097518920898 248.1822204589844 L 22.65115356445312 248.1822204589844 L 22.61329460144043 248.1698455810547 L 19.91573333740234 247.2880706787109 C 17.58241844177246 248.2200469970703 17.21404266357422 248.3081817626953 17.16360473632812 248.3163757324219 L 17.14370346069336 248.3196105957031 L 17.12353515625 248.3196105957031 L 15.0033540725708 248.3196105957031 L 14.7533540725708 248.3196105957031 L 14.7533540725708 248.0696105957031 L 14.7533540725708 246.1527099609375 L 14.7533540725708 238.5091705322266 L 6.939864158630371 238.5091705322266 L 6.939864158630371 238.7851104736328 L 6.939864158630371 256.5708618164062 C 7.569061279296875 256.1465759277344 8.246176719665527 255.8055572509766 8.958643913269043 255.5546112060547 C 9.90870475769043 255.2201080322266 10.90253448486328 255.0505065917969 11.91256427764893 255.0505065917969 C 14.04248428344727 255.0505065917969 16.11086463928223 255.8075408935547 17.73668479919434 257.18212890625 L 18.63418197631836 257.941162109375 L 24.05000495910645 257.941162109375 C 25.01785469055176 257.941162109375 25.92761421203613 258.3178405761719 26.61168479919434 259.0018310546875 C 27.2957649230957 259.6858825683594 27.67250442504883 260.5956115722656 27.67250442504883 261.5635070800781 C 27.67250442504883 261.9056091308594 27.62517929077148 262.2413940429688 27.53149032592773 262.5658264160156 L 30.21129035949707 262.5658264160156 L 32.87563323974609 259.9013366699219 L 32.87563323974609 248.2000732421875 L 32.87563323974609 247.9500732421875 L 33.12563323974609 247.9500732421875 L 35.24581527709961 247.9500732421875 L 35.49581527709961 247.9500732421875 L 35.49581527709961 248.2000732421875 L 35.49581527709961 257.2810363769531 L 36.63174438476562 256.1451110839844 C 37.31808471679688 255.4610290527344 38.227783203125 255.0844421386719 39.19358444213867 255.0844421386719 C 40.15936279296875 255.0844421386719 41.06862258911133 255.4605712890625 41.75385284423828 256.1435546875 C 43.16532516479492 257.5570068359375 43.16615295410156 259.85546875 41.7561149597168 261.2676086425781 L 34.03781509399414 268.9844665527344 C 33.61615371704102 269.4064636230469 33.09767532348633 269.7388000488281 32.53853607177734 269.9455261230469 L 22.8663444519043 273.5243530273438 C 22.4017448425293 273.696533203125 21.91536521911621 273.7838745117188 21.42084503173828 273.7838745117188 L 12.86254405975342 273.7838745117188 L 12.61254405975342 273.7838745117188 L 12.61254405975342 273.5338745117188 L 12.61254405975342 271.4136962890625 L 12.61254405975342 271.1636962890625 L 12.86254405975342 271.1636962890625 L 21.42084503173828 271.1636962890625 C 21.6034049987793 271.1636962890625 21.78361511230469 271.1312255859375 21.95648384094238 271.0671691894531 L 31.62939453125 267.4881286621094 C 31.8363151550293 267.41162109375 32.02839279174805 267.2884521484375 32.18489456176758 267.1319580078125 L 39.90277481079102 259.4156494140625 C 40.29288482666016 259.0248718261719 40.29256439208984 258.3883972167969 39.90189361572266 257.9970703125 C 39.71279525756836 257.8085327148438 39.46110534667969 257.7044677734375 39.19358444213867 257.7044677734375 C 38.9261360168457 257.7044677734375 38.67383575439453 257.8091735839844 38.483154296875 257.999267578125 L 31.68033409118652 264.80224609375 C 31.43290519714355 265.0496215820312 31.10393524169922 265.1858520507812 30.75400352478027 265.1858520507812 L 17.73395156860352 265.1855773925781 L 17.10596466064453 265.8135681152344 C 16.85859489440918 266.0609436035156 16.52961349487305 266.1971740722656 16.17963409423828 266.1971740722656 C 15.82964420318604 266.1971740722656 15.50061416625977 266.0608825683594 15.25314426422119 265.8133850097656 C 15.00572395324707 265.5660705566406 14.86943435668945 265.2370910644531 14.86943435668945 264.8871459960938 C 14.86943435668945 264.5372009277344 15.00571441650391 264.2081909179688 15.25316429138184 263.9607543945312 L 16.26492500305176 262.9491577148438 C 16.51247406005859 262.7017517089844 16.84143447875977 262.5655212402344 17.19124412536621 262.5655212402344 L 24.0494441986084 262.5655212402344 L 24.05952453613281 262.5655212402344 L 24.06092834472656 262.5656127929688 C 24.60811805725098 262.56005859375 25.05218505859375 262.1122436523438 25.05218505859375 261.5635070800781 C 25.05218505859375 261.2955017089844 24.94803428649902 261.0437316894531 24.75890350341797 260.8546447753906 C 24.56976509094238 260.6653747558594 24.31798362731934 260.5611877441406 24.04986381530762 260.5611877441406 L 18.15436363220215 260.5611877441406 C 17.84479522705078 260.5611877441406 17.54433441162109 260.451171875 17.30831336975098 260.2514038085938 L 16.04476356506348 259.1827697753906 C 14.89149475097656 258.2077026367188 13.42397403717041 257.6706848144531 11.91256427764893 257.6706848144531 C 11.19968414306641 257.6706848144531 10.49863433837891 257.7902221679688 9.82889461517334 258.0260009765625 C 9.158763885498047 258.2620239257812 8.536554336547852 258.6078491210938 7.979584217071533 259.0538635253906 C 7.665471076965332 259.3060913085938 7.316047191619873 259.5851745605469 6.939864158630371 259.88427734375 L 6.939864158630371 271.163818359375 L 9.692034721374512 271.163818359375 L 9.942034721374512 271.163818359375 L 9.942034721374512 271.413818359375 L 9.942034721374512 273.5339660644531 L 9.942034721374512 273.7839660644531 Z M 2.370184183120728 271.163818359375 L 4.319694519042969 271.163818359375 L 4.319694519042969 260.5609130859375 L 2.370184183120728 260.5609130859375 L 2.370184183120728 271.163818359375 Z M 19.9269847869873 244.6275482177734 L 19.99045372009277 244.6495971679688 L 22.44097518920898 245.500732421875 L 22.44097518920898 238.5091705322266 L 17.37353515625 238.5091705322266 L 17.37353515625 245.4843444824219 C 19.18220329284668 244.7757873535156 19.83267784118652 244.6457672119141 19.86101341247559 244.6402893066406 L 19.9269847869873 244.6275482177734 Z"
                stroke="none"
              />
              <path
                d="M 9.692034721374512 273.5339660644531 L 9.692034721374512 271.413818359375 L 6.689864158630371 271.413818359375 L 6.689864158630371 259.7636413574219 C 6.978774070739746 259.5340881347656 7.391924381256104 259.2051391601562 7.823314189910889 258.8587341308594 C 8.402264595031738 258.3951110839844 9.0491943359375 258.0355529785156 9.745883941650391 257.7901916503906 C 10.44215393066406 257.5450744628906 11.17121410369873 257.4206848144531 11.91256427764893 257.4206848144531 C 13.48291397094727 257.4206848144531 15.00788402557373 257.9787292480469 16.20620346069336 258.9918823242188 L 17.46983337402344 260.0605773925781 C 17.66121482849121 260.2225646972656 17.90375518798828 260.3111877441406 18.15436363220215 260.3111877441406 L 24.04986381530762 260.3111877441406 C 24.38471412658691 260.3111877441406 24.69934463500977 260.4413757324219 24.9356746673584 260.6778564453125 C 25.17200469970703 260.9141540527344 25.30218505859375 261.2285461425781 25.30218505859375 261.5635070800781 C 25.30218505859375 262.2532653808594 24.74175453186035 262.8143920898438 24.05241394042969 262.815673828125 C 24.05142402648926 262.815673828125 24.05043411254883 262.8155212402344 24.0494441986084 262.8155212402344 L 17.19124412536621 262.8155212402344 C 16.91010475158691 262.8155212402344 16.64056396484375 262.9271850585938 16.44168472290039 263.1259460449219 L 15.42993450164795 264.1375427246094 C 15.01593399047852 264.551513671875 15.01593399047852 265.2227783203125 15.42993450164795 265.6366271972656 C 15.84396743774414 266.0507202148438 16.51521682739258 266.0507507324219 16.92918395996094 265.6367797851562 L 17.63039398193359 264.9355773925781 L 30.75400352478027 264.9358520507812 C 31.0351448059082 264.9358520507812 31.30482482910156 264.8241577148438 31.50355339050293 264.6254577636719 L 38.30664443969727 257.8222351074219 C 38.54453277587891 257.5850524902344 38.85944366455078 257.4544677734375 39.19358444213867 257.4544677734375 C 39.52771377563477 257.4544677734375 39.8427734375 257.5850830078125 40.07882308959961 257.8204345703125 C 40.56675338745117 258.3092041015625 40.56675338745117 259.1043701171875 40.07953262329102 259.5924377441406 L 32.36166381835938 267.3087463378906 C 32.18003463745117 267.4903564453125 31.95685386657715 267.6335754394531 31.71614456176758 267.7225952148438 L 22.0433349609375 271.3016052246094 C 21.84276390075684 271.3759155273438 21.6332950592041 271.4136962890625 21.42084503173828 271.4136962890625 L 12.86254405975342 271.4136962890625 L 12.86254405975342 273.5338745117188 L 21.42084503173828 273.5338745117188 C 21.88559341430664 273.5338745117188 22.34284400939941 273.4517517089844 22.77959442138672 273.2898864746094 L 32.45184326171875 269.7110290527344 C 32.97750473022461 269.5166931152344 33.46486282348633 269.2041625976562 33.86105346679688 268.8076782226562 L 41.57920455932617 261.0909729003906 C 42.89187240600586 259.7763366699219 42.89187240600586 257.636962890625 41.57737350463867 256.3206176757812 C 40.93947601318359 255.6848297119141 40.09282302856445 255.3344421386719 39.19358444213867 255.3344421386719 C 38.29434585571289 255.3344421386719 37.44768524169922 255.6848297119141 36.80852508544922 256.3218994140625 L 35.24581527709961 257.8845825195312 L 35.24581527709961 248.2000732421875 L 33.12563323974609 248.2000732421875 L 33.12563323974609 260.0048828125 L 30.31484413146973 262.8158264160156 L 27.18137359619141 262.8158264160156 C 27.33685493469238 262.4283752441406 27.42250442504883 262.0057678222656 27.42250442504883 261.5635070800781 C 27.42250442504883 260.6624450683594 27.07182502746582 259.8154907226562 26.4349250793457 259.1786193847656 C 25.79802513122559 258.5418090820312 24.95108413696289 258.191162109375 24.05000495910645 258.191162109375 L 18.54263496398926 258.191162109375 L 17.57527351379395 257.373046875 C 15.99446392059326 256.0364990234375 13.9834041595459 255.3005065917969 11.91256427764893 255.3005065917969 C 10.93078422546387 255.3005065917969 9.964974403381348 255.46533203125 9.041704177856445 255.7904052734375 C 8.195754051208496 256.08837890625 7.406484127044678 256.5145263671875 6.689864158630371 257.0567321777344 L 6.689864158630371 238.2591705322266 L 15.0033540725708 238.2591705322266 L 15.0033540725708 246.1527099609375 C 15.0033540725708 246.7896118164062 15.0033540725708 248.0696105957031 15.0033540725708 248.0696105957031 L 17.12353515625 248.0696105957031 C 17.12353515625 248.0696105957031 17.40198516845703 248.0243835449219 19.90718460083008 247.0222473144531 L 22.69097518920898 247.9322204589844 L 24.81115341186523 247.9322204589844 C 24.81115341186523 247.9322204589844 24.81115341186523 246.7896118164062 24.81115341186523 246.1528472900391 L 24.81115341186523 238.2593078613281 C 32.88916397094727 238.2593078613281 33.12563323974609 238.2591705322266 33.12563323974609 238.2591705322266 L 33.12563323974609 243.2530059814453 L 35.24581527709961 243.2530059814453 L 35.24581527709961 238.7851104736328 C 35.24581527709961 238.1373443603516 35.24581527709961 236.1390075683594 35.24581527709961 236.1390075683594 C 35.24581527709961 236.1390075683594 33.41006469726562 236.1390075683594 32.59841537475586 236.1390075683594 L 4.569694519042969 236.1390075683594 C 4.569694519042969 236.1390075683594 4.569694519042969 237.9723815917969 4.569694519042969 238.7851104736328 L 4.569694519042969 258.1907348632812 L 4.295654434827156e-06 258.1907348632812 L 4.295654434827156e-06 259.2508239746094 L 0.02936429530382156 273.5339660644531 L 9.692034721374512 273.5339660644531 M 2.120184183120728 260.3109130859375 L 4.569694519042969 260.3109130859375 L 4.569694519042969 271.413818359375 L 2.120184183120728 271.413818359375 L 2.120184183120728 260.3109130859375 M 19.90843391418457 244.8857574462891 C 19.90843391418457 244.8857574462891 19.19537353515625 245.0234985351562 17.12353515625 245.8522033691406 L 17.12353515625 238.2591705322266 L 22.69097518920898 238.2591705322266 L 22.69097518920898 245.8522033691406 L 19.90843391418457 244.8857574462891 M 10.19203472137451 274.0339660644531 L -0.4696057140827179 274.0339660644531 L -0.4999957084655762 257.6907348632812 L 4.069694519042969 257.6907348632812 L 4.069694519042969 235.6390075683594 L 35.74581527709961 235.6390075683594 L 35.74581527709961 243.7530059814453 L 32.62563323974609 243.7530059814453 L 32.62563323974609 238.7592163085938 C 31.87290382385254 238.7592468261719 29.99351501464844 238.7593078613281 25.31115341186523 238.7593078613281 L 25.31115341186523 248.4322204589844 L 22.61132431030273 248.4322204589844 L 19.92421340942383 247.5538482666016 C 18.39549255371094 248.1634368896484 17.40780258178711 248.5299835205078 17.20368385314941 248.5631408691406 L 17.16387367248535 248.5696105957031 L 14.5033540725708 248.5696105957031 L 14.5033540725708 238.7591705322266 L 7.189864158630371 238.7591705322266 L 7.189864158630371 256.1147155761719 C 7.723919868469238 255.7922515869141 8.28801441192627 255.5257720947266 8.875594139099121 255.3188018798828 C 9.852414131164551 254.9748840332031 10.87418460845947 254.8005065917969 11.91256427764893 254.8005065917969 C 14.1015043258667 254.8005065917969 16.22721481323242 255.5785217285156 17.89809417724609 256.9912414550781 L 18.72571754455566 257.691162109375 L 24.05000495910645 257.691162109375 C 25.08462524414062 257.691162109375 26.05716514587402 258.0938415527344 26.78845405578613 258.8250427246094 C 27.5197639465332 259.5563049316406 27.92250442504883 260.5288391113281 27.92250442504883 261.5635070800781 C 27.92250442504883 261.8181457519531 27.8979663848877 262.0695190429688 27.84924507141113 262.3158264160156 L 30.10773658752441 262.3158264160156 L 32.62563323974609 259.7977905273438 L 32.62563323974609 247.7000732421875 L 35.74581527709961 247.7000732421875 L 35.74581527709961 256.677490234375 L 36.45497512817383 255.9683380126953 C 37.18877410888672 255.2369384765625 38.16116333007812 254.8344421386719 39.19358444213867 254.8344421386719 C 40.22598266601562 254.8344421386719 41.19791412353516 255.2364807128906 41.93034362792969 255.9664764404297 C 43.43949508666992 257.4777526855469 43.44032287597656 259.9346923828125 41.93302536010742 261.4442749023438 L 34.21457290649414 269.1612548828125 C 33.76764297485352 269.6085205078125 33.2180061340332 269.9608764648438 32.62522506713867 270.1799926757812 L 22.95310401916504 273.7588195800781 C 22.46073341369629 273.9412841796875 21.94511413574219 274.0338745117188 21.42084503173828 274.0338745117188 L 12.36254405975342 274.0338745117188 L 12.36254405975342 270.9136962890625 L 21.42084503173828 270.9136962890625 C 21.57366371154785 270.9136962890625 21.72465515136719 270.886474609375 21.86962509155273 270.8327331542969 L 31.54263496398926 267.253662109375 C 31.71600341796875 267.1895446777344 31.87694358825684 267.0863342285156 32.00813293457031 266.9551696777344 L 39.72601318359375 259.2388610839844 C 40.01873397827148 258.9456176757812 40.01841354370117 258.4676513671875 39.7249641418457 258.1736755371094 C 39.58347320556641 258.0326232910156 39.39446258544922 257.9544677734375 39.19358444213867 257.9544677734375 C 38.99277496337891 257.9544677734375 38.80316543579102 258.0332641601562 38.65966415405273 258.1763305664062 L 31.85711479187012 264.97900390625 C 31.56245422363281 265.2736206054688 31.17070388793945 265.4358520507812 30.75400352478027 265.4358520507812 L 17.83749771118164 265.4355773925781 L 17.28273391723633 265.9903259277344 C 16.9881534576416 266.284912109375 16.59639358520508 266.4471740722656 16.17963409423828 266.4471740722656 C 15.762864112854 266.4471740722656 15.37104415893555 266.2848815917969 15.07636451721191 265.9901733398438 C 14.78173446655273 265.6956481933594 14.61943435668945 265.3038940429688 14.61943435668945 264.8871459960938 C 14.61943435668945 264.4703979492188 14.78171443939209 264.0786437988281 15.07639408111572 263.7839660644531 L 16.08815383911133 262.7723693847656 C 16.38296508789062 262.4777221679688 16.77469444274902 262.3155212402344 17.19124412536621 262.3155212402344 L 24.06662178039551 262.3155212402344 C 24.47312927246094 262.3071594238281 24.80218505859375 261.9727478027344 24.80218505859375 261.5635070800781 C 24.80218505859375 261.3622741699219 24.72403335571289 261.1733093261719 24.58214378356934 261.0314331054688 C 24.44015502929688 260.8893432617188 24.25117492675781 260.8111877441406 24.04986381530762 260.8111877441406 L 18.15436363220215 260.8111877441406 C 17.78573417663574 260.8111877441406 17.42790412902832 260.6801452636719 17.14680480957031 260.4422302246094 L 15.88332462310791 259.3736572265625 C 14.77514457702637 258.4367065429688 13.36495399475098 257.9206848144531 11.91256427764893 257.9206848144531 C 11.22802448272705 257.9206848144531 10.5549144744873 258.0354614257812 9.911913871765137 258.2618103027344 C 9.268394470214844 258.4884643554688 8.67082405090332 258.8206176757812 8.135854721069336 259.2490234375 C 7.848098278045654 259.4800720214844 7.530509471893311 259.7338256835938 7.189864158630371 260.0048828125 L 7.189864158630371 270.913818359375 L 10.19203472137451 270.913818359375 L 10.19203472137451 274.0339660644531 Z M 2.620184183120728 270.913818359375 L 4.069694519042969 270.913818359375 L 4.069694519042969 260.8109130859375 L 2.620184183120728 260.8109130859375 L 2.620184183120728 270.913818359375 Z M 19.9455451965332 244.3693542480469 L 22.19097518920898 245.1492462158203 L 22.19097518920898 238.7591705322266 L 17.62353515625 238.7591705322266 L 17.62353515625 245.1195068359375 C 19.19729804992676 244.5177917480469 19.78624534606934 244.4001159667969 19.8136043548584 244.3948364257812 L 19.9455451965332 244.3693542480469 Z"
                stroke="none"
                fill="#fff"
              />
            </g>
          </svg>
          <span className="text-white text-[14px] md:text-[22px] lg:text[25px] font-semibold">
            شراء الان
          </span>
      </Button>
    </div>
  );
};

const Offer = ({ product }) => {
  const offers = [
    { qunt: 1, originalPrice: " ر.س 200", offer: "ر.س 90" },
    { qunt: 2, originalPrice: " ر.س 200", offer: "ر.س 90" },
    { qunt: 3, originalPrice: " ر.س 200", offer: "ر.س 90" },
  ];
  return (
    <div className="mt-4">
      <h3 className="mb-3 text-gray-400 font-bold text-xl">
        اشتري كمية اكبر ووفر اكثر
      </h3>
      <div className="flex justify-start gap-2">
        {offers.map((el) => {
          return (
            <div className="border shadow-sm font-semibold p-3 hover:cursor-pointer hover:bg-[#f8e3dc]">
              <p>{el.qunt} قطعة</p>
              <span className="text-[#FF5910]">{el.offer}</span>
              <span className="text-gray-400 line-through text-xs px-2">
                {el.originalPrice}
              </span>
            </div>
          );
        })}
      </div>
      <PurchaseControls product={product} />
      <div>
        <div className="flex w-full flex-col md:flex-row md:flex-wrap justify-between items-start gap-3 md:items-center">
          <div className="w-full flex flex-col md:flex-row gap-5 justify-between">
            <span className="font-bold">
              أو قسمها على 4 دفعات شهرية بقيمة 40 ر.س
            </span>
            <img
              width="70px"
              src={require("../../assets/images/tabby.png")}
              alt="taddy"
              className="ml-auto"
            />
          </div>
          <p className="underline hover:text-blue-400 font-semibold text-sm my-1 hover: cursor-pointer">
            إعرف المزيد
          </p>
        </div>
      </div>
    </div>
  );
};
const Heading = (props) => {
  return (
    <h2
      className={`mb-4 w-full text-center md:text-right font-bold text-[24px] md:text-[45px] ${props.className}`}
    >
      {props.text}
    </h2>
  );
};
const Details = (props) => {
  const infoDiv = useRef();
  const [clicked, setClicked] = useState(false);
  const [lineClamping, setLineClamping] = useState(
    // "line-clamp-3 md:line-clamp-4"
    ""
  );

  // useEffect(() => {
  //   if (clicked === true)
  //     if (infoDiv.current?.className.includes("line-clamp-3 md:line-clamp-4"))
  //       setLineClamping("");
  //     else setLineClamping("line-clamp-3 md:line-clamp-4");
  //   setClicked(false);
  // }, [clicked]);

  return (
    <div className="w-full">
      <h3 className="font-bold xs:text-lg md:text-3xl">شرح التفاصيل</h3>
      <div className="h-0.5 bg-gray-300 w-full my-4"></div>
      <div
        className={`text-justify ${lineClamping}  text-ellipsis`}
        dangerouslySetInnerHTML={{ __html: props.des }}
        ref={infoDiv}
        onClick={() => setClicked(true)}
      ></div>
    </div>
  );
};

const ProductsGrid = () => {
  const { products } = useContext(ProductsContext);
  useEffect(() => {
    // console.log(products.slice(0, 4));
  }, [products]);
  return (
    <>
      {products !== undefined && products !== null ? (
        products.slice(0, 4).map((el) => {
          return (
            <ProductCard
              id={el.id}
              link={el.images.length === 0 ? "" : el.images[0].src}
              name={el.name}
              price_html={el.price_html}
              price={el.price}
              product={el}
            />
          );
        })
      ) : (
        <></>
      )}
    </>
  );
};

const ProductDetails = () => {
  const { id } = useParams();
  const [dims, setDims] = useState(window.innerHeight);
  const [product, setProduct] = useState({ images: [{ src: "" }] });
  const { currency } = useContext(AppDataContext);
  const { products } = useContext(ProductsContext);

  useEffect(() => {
    async function fetchProduct() {
      await WooCommerce.get(`products/${id}`)
        .then((res) => {
          setProduct(res.data);
        })
        .catch((error) => {
          console.log(error.response.data);
        });
    }

    // setId(id);
    if (product !== undefined) {
      // setCurrProduct(product);
      fetchProduct();
    }
  }, [id]);

  useEffect(() => {
    // console.log(currProduct);
    window.addEventListener("resize", () => setDims(window.innerWidth));
    // console.log("dims= ", dims);
    return (_) => {
      window.removeEventListener("resize", () => setDims(window.innerWidth));
    };
  }, [dims]);

  return (
    <div className="container mx-auto py-3 px-auto">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-16">
        <div dir="ltr" className="h-fit flex justify-center">
          {/* <Carousel
            data={[...images]}
            // time={2000}
            width="750px"
            height="500px"
            // captionStyle={captionStyle}
            radius="0px"
            // slideNumber={true}
            // slideNumberStyle={slideNumberStyle}
            // captionPosition="bottom"
            // automatic={true}
            dots={true}
            // pauseIconColor="white"
            // pauseIconSize="40px"
            slideBackgroundColor="darkgrey"
            slideImageFit="cover"
            thumbnails={true}
            thumbnailHeight="100px"
            thumbnailWidth="60px"
            style={{
              textAlign: "center",
              maxWidth: "750px",
              maxHeight: "550px",
            }}
          /> */}
          <Carousel
            width="100%"
            dir="rtl"
            className="rtl flex flex-col w-full items-center"
            dynamicHeight={false}
          >
            {product !== undefined ? (
              product.images.map((el) => {
                return (
                  <div className="max-h-[550px] max-w-[750px]">
                    <img src={el.src} alt="" />
                  </div>
                );
              })
            ) : (
              <></>
            )}
          </Carousel>{" "}
        </div>
        <div>
          <div className="flex flex-col flex-nowrap gap-2 xs:justify-start md:justify-between ">
            <Ratings
              raters={product.rating_count}
              rating={product.average_rating}
            />
            <ProductHead
              name={product.name}
              price={product.price}
              currency={currency}
            />
            <ProductDes des={product.short_description} />
            <Offer product={product} />
          </div>
        </div>
      </div>
      <div className="flex mt-10">
        <Details des={product.description} />
      </div>
      <div className="flex flex-col mt-10 w-full">
        <Heading text="منتجات مشابهه" className="md:hidden" />
        <div className="hidden md:block">
          <Slider
            rows={1}
            slides={dims > 760 ? 3 : 2}
            autoPlay={false}
            header={<Heading text="منتجات مشابهه" />}
            type="items"
            comp={
              products !== undefined && products !== null
                ? products.map((el) => {
                    return (
                      <ProductCard
                        id={el.id}
                        link={el.images.length === 0 ? "" : el.images[0].src}
                        name={el.name}
                        price_html={el.price_html}
                        price={el.price}
                        product={el}
                      />
                    );
                  })
                : [<></>, <></>]
            }
          />
        </div>
        <div className="md:hidden grid gap-4  grid-cols-2  grid-rows-2 grid-flow-row-dense w-full mx-auto">
          <ProductsGrid />
        </div>
      </div>
      <div className="flex flex-col mt-24  pb-2  w-full">
        <Slider
          type="opinion"
          slides={dims > 768 ? 3 : 1}
          header={
            <Heading
              text="أراء العملاء"
              className="relative -left-6 md:left-0"
            />
          }
          autoPlay={true}
          comp={data.map((el) => (
            <CustomerOpinion id={el.id} link={el.image} />
          ))}
        />
      </div>
      <div className="h-96 mt-32 border-t-2"></div>
    </div>
  );
};
export default ProductDetails;
